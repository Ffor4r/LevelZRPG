plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
}  

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://jitpack.io" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://www.cursemaven.com" }
    maven { url "https://maven.nucleoid.xyz/" }
    maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
    maven { url "https://maven.bai.lol" }
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url 'https://maven.kosmx.dev/' }
    maven { url 'https://libs.azuredoom.com:4443/mods' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // LibZ
    modApi ('maven.modrinth:libz:1.0.2+1.20.1') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // Cloth
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // ModMenu
    modCompileOnly modRuntimeOnly("com.terraformersmc:modmenu:${project.mod_menu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // Wthit
    modCompileOnly ("mcp.mobius.waila:wthit-api:fabric-8.2.0")
	// Jade
    modCompileOnly ('maven.modrinth:jade:11.0.3'){
		exclude(group: "net.fabricmc.fabric-api")
	}
	// MCDA
	modCompileOnly ('curse.maven:mcda-426206:3821450') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // DragonLoot
	modCompileOnly ('maven.modrinth:dragonloot:1.1.2') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // Trinkets
    modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2")
	modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.2")
    modCompileOnly ('maven.modrinth:trinkets:3.7.1') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:9.0.472"
    // EMI
    modCompileOnly "dev.emi:emi:0.4.0+1.19"

    // Dualwielding
	modCompileOnly ('com.github.Globox1997:DualWielding:1.19-SNAPSHOT') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // PlaceHolder
    modCompileOnly ("eu.pb4:placeholder-api:2.1.1+1.20")
    // Inmis
	modCompileOnly ("curse.maven:inmis-369254:3853651") {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // CosmeticArmor
    modCompileOnly ('maven.modrinth:cosmetic-armor:1.5.0') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // TreeChop
    modCompileOnly ('maven.modrinth:treechop:0.18.3') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // Alloygery
    modCompileOnly ('maven.modrinth:alloygery:2.5.5+1.19.2') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // Magna
    modCompileOnly ('com.github.Draylar:magna:1.8.0-1.19.2') {
		exclude(group: "net.fabricmc.fabric-api")
	}
    // Spell-Engine
    modCompileOnly ('maven.modrinth:spell-engine:0.9.24+1.19-fabric') {
		exclude(group: "net.fabricmc.fabric-api")
	}

    modImplementation("maven.modrinth:mmmmmmmmmmmm:${project.turget_dummy}-fabric")
    modImplementation("maven.modrinth:moonlight:${project.moonlight}")

    include(implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}"))
    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixin_extras_version}")))
    include(modImplementation("maven.modrinth:structure-pool-api:${project.structure_pool_api_version}"))

    modImplementation("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.azure_mc_version}:${project.azure_lib_version}")
    modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
    modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
    modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")
    modImplementation("maven.modrinth:projectile-damage-attribute:3.2.2+1.20.1-fabric")

    modImplementation("maven.modrinth:archers:1.0.6+1.20.1")

    modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")
    modImplementation("dev.emi:trinkets:${project.trinkets_version}")

    modImplementation("maven.modrinth:wizards:${project.wizards_version}-fabric")
}


processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
		expand "version": project.version, "fabric_version": project.fabric_version, "loader_version": project.loader_version, "minecraft_version": project.minecraft_version, "cloth_config_version": project.cloth_config_version
	}
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}